#include <stdio.h>
#include <stdlib.h>



#define MinQuantity 5

// Product details
float itemAPrice = 1.0;
int itemAQuantity = 10;
float itemBPrice = 2.0;
int itemBQuantity = 15;
float itemCPrice = 1.5;
int itemCQuantity = 7;

int adminPassword = 1234;

float totalSales = 0.0;

// Function prototypes
void displaymenu();
void purchaseitem();
void adminmode();
void replenishitems();
void changeitemprices();
void displaytotalsale();
void displayitemavailability();

int main() {
    int choice;

    while (1) {
        displaymenu();
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                purchaseitem();
                break;
            case 2:
                adminmode();
                break;
            case 3:
                printf("Exiting.\n");
                exit(0);
            default:
                printf("Invalid choice.\n");
        }
    }

    return 0;
}

void displaymenu(){
    printf("Main Menu\n");
    printf("1. Purchase Item\n");
    printf("2. Admin Mode\n");
    printf("3. Exit\n");
    printf("Enter your choice: ");
}

void purchaseitem() {
    int itemChoice;
    float itemPrice;
    int* itemQuantity;
    char itemName;

    printf("Available Items:\n");
    printf("1. Item A - $%.2f (Qty: %d)\n", itemAPrice, itemAQuantity);
    printf("2. Item B - $%.2f (Qty: %d)\n", itemBPrice, itemBQuantity);
    printf("3. Item C - $%.2f (Qty: %d)\n", itemCPrice, itemCQuantity);
    printf("Enter the item number to purchase (0 to cancel): ");
    scanf("%d", &itemChoice);

    switch (itemChoice) {
        case 1:
            itemPrice = itemAPrice;
            itemQuantity = &itemAQuantity;
            itemName = 'A';
            break;
        case 2:
            itemPrice = itemBPrice;
            itemQuantity = &itemBQuantity;
            itemName = 'B';
            break;
        case 3:
            itemPrice = itemCPrice;
            itemQuantity = &itemCQuantity;
            itemName = 'C';
            break;
        case 0:
            printf("Purchase cancelled.\n");
            return;
        default:
            printf("Invalid item choice.\n");
            return;
    }

    printf("You selected Item %c - $%.2f\n", itemName, itemPrice);

    float insertedAmount = 0.0;
    float coin;

    while (insertedAmount < itemPrice) {
        printf("Insert a coin (1, 0.5, 0.25 Dh) or 0 to cancel: ");
        scanf("%f", &coin);

        if (coin == 1 || coin == 0.5 || coin == 0.25) {
            insertedAmount += coin;
        } else if (coin == 0) {
            printf("Purchase canceled.\n");
            return;
        } else {
            printf("Invalid coin.\n");
        }
    }

    *itemQuantity -= 1;
    totalSales += itemPrice;

    printf("You purchased Item %c for $%.2f. Change: $%.2f\n", itemName, itemPrice, insertedAmount - itemPrice);

    if (*itemQuantity <= MinQuantity) {
        printf("Alert: Low quantity for Item %c!\n", itemName);
    }
}

void adminmode() {
    int password;
    printf("Enter the admin password: ");
    scanf("%d", &password);

    if (password != adminPassword) {
        printf("Incorrect admin password.\n");
        return;
    }

    int adminChoice;
    
    while (1) {
        printf("Admin Menu\n");
        printf("1. Replenish Items\n");
        printf("2. Change Item Prices\n");
        printf("3. Display Total Sale\n");
        printf("4. Display Item Availability\n");
        printf("0. Exit Admin Mode\n");
        printf("Enter your choice: ");
        scanf("%d", &adminChoice);

        switch (adminChoice) {
            case 1:
                replenishitems();
                break;
            case 2:
                changeitemprices();
                break;
            case 3:
                displaytotalsale();
                break;
            case 4:
                displayitemavailability();
                break;
            case 0:
                printf("Exiting Admin Mode.\n");
                return;
            default:
                printf("Invalid choice.\n");
        }
    }
}

void replenishitems() {
  int maxReplenish = 20;
    int replenishAmountA = maxReplenish - itemAQuantity;
    int replenishAmountB = maxReplenish - itemBQuantity;
    int replenishAmountC = maxReplenish - itemCQuantity;

    if (replenishAmountA > 0) {
        itemAQuantity += rand() % (replenishAmountA + 1);
    }
    
    if (replenishAmountB > 0) {
        itemBQuantity += rand() % (replenishAmountB + 1);
    }
    
    if (replenishAmountC > 0) {
        itemCQuantity += rand() % (replenishAmountC + 1);
    }

    printf("Item quantities replenished.\n");
}

void changeitemprices() {
    printf("Enter the new price for Item A: ");
    scanf("%f", &itemAPrice);
    printf("Enter the new price for Item B: ");
    scanf("%f", &itemBPrice);
    printf("Enter the new price for Item C: ");
    scanf("%f", &itemCPrice);
    printf("Item prices updated.\n");
}

void displaytotalsale() {
    printf("Total Sales: $%.2f\n", totalSales);
    int resetTotal;
    printf("Would you like to reset the total sale to zero? (1 for Yes, 0 for No): ");
    scanf("%d", &resetTotal);

    if (resetTotal == 1) {
        totalSales = 0.0;
        printf("Total sales reset to zero.\n");
    }
}

void displayitemavailability() {
    printf("Item A - Quantity: %d\n", itemAQuantity);
    printf("Item B - Quantity: %d\n", itemBQuantity);
    printf("Item C - Quantity: %d\n", itemCQuantity);
}
